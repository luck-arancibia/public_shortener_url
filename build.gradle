plugins {
    id 'org.springframework.boot' version '2.7.16'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'jacoco'
    id 'org.cyclonedx.bom' version '1.7.2'
    id "name.remal.integration-tests" version "3.0.0"
    id "de.undercouch.download" version "5.3.0"
}

repositories {
    mavenLocal()
    mavenCentral()
}

group = 'com.meli.shortener.url.services'
version = '1.0.0'

apply from: 'gradle/jacoco.gradle'

compileJava {
    sourceCompatibility = 17
    targetCompatibility = 17
    options.encoding = 'UTF-8'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

ext {
  set('springCloudVersion', "2021.0.8")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

configurations {
    implementation {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
    }
    configureEach {
        /* only junit 5 should be used */
        exclude group: 'junit', module: 'junit'
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}
dependencies {
    // Spring Boot Framework
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-undertow'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // Swagger
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.swagger:swagger-annotations:1.6.9'

    // Hash solutions
    implementation("com.google.guava:guava:33.3.1-jre")

    // New Relic
//    runtimeOnly group: 'com.newrelic.agent.java', name: 'newrelic-api', version: '2.15.0'

    implementation 'com.newrelic.agent.java:newrelic-api:2.15.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    testCompileOnly 'org.projectlombok:lombok:1.18.26'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'

    // Testing
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation 'com.tngtech.archunit:archunit:1.0.1'
}

tasks.withType(Test).configureEach {
    systemProperty 'file.encoding', 'utf-8'
    useJUnitPlatform()
}

testSourceSets {
    integration
}

tasks.register('stage') {
    dependsOn build
    doLast {
        delete fileTree(dir: "build", exclude: "libs")
        delete fileTree(dir: "build/libs", exclude: "*.jar")
    }
}

task downloadNewrelic(type: Download) {
    mkdir 'newrelic'
    src 'https://download.newrelic.com/newrelic/java-agent/newrelic-agent/current/newrelic-java.zip'
    dest file('newrelic')
}

task unzipNewrelic(type: Copy) {
    from zipTree(file('newrelic/newrelic-java.zip'))
    into rootDir
}
